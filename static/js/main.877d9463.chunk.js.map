{"version":3,"sources":["Components/DishesForm.jsx","Redux/operation.js","App.js","reportWebVitals.js","Redux/store.js","index.js","Components/Form.module.css"],"names":["DishesForm","props","useState","typeDishes","setTypeDishes","handleSubmit","reset","pristine","submitting","onSubmit","className","s","form","form_title","label","htmlFor","Field","id","field","name","component","type","required","placeholder","step","min","max","onChange","e","target","value","parse","pattern","button_container","button","disabled","onClick","reduxForm","destroyOnUnmount","fetchDishes","createAsyncThunk","values","a","axios","post","data","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","App","dispatch","useDispatch","container","newestOnTop","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","formReducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.877d9463.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\n\r\nlet DishesForm = (props) => {\r\n  const [typeDishes, setTypeDishes] = useState(\"Select type\");\r\n  const selectChange = (e) => {\r\n    setTypeDishes(e.target.value);\r\n  };\r\n  const { handleSubmit, reset, pristine, submitting } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <h2 className={s.form_title}>Dish order form</h2>\r\n\r\n      <label className={s.label} htmlFor=\"name\">\r\n        Name\r\n      </label>\r\n      <Field\r\n        id=\"name\"\r\n        className={s.field}\r\n        name=\"name\"\r\n        component=\"input\"\r\n        type=\"text\"\r\n        required\r\n        placeholder=\"Name\"\r\n      />\r\n\r\n      <label className={s.label} htmlFor=\"preparation_time\">\r\n        Preparation time\r\n      </label>\r\n      <Field\r\n        id=\"preparation_time\"\r\n        className={s.field}\r\n        name=\"preparation_time\"\r\n        component=\"input\"\r\n        type=\"time\"\r\n        step=\"1\"\r\n        min=\"00:00:00\"\r\n        max=\"24:00:00\"\r\n        required\r\n        placeholder=\"00:00:00\"\r\n      />\r\n\r\n      <label className={s.label} htmlFor=\"type\">\r\n        Select type\r\n      </label>\r\n      <Field\r\n        id=\"type\"\r\n        className={s.field}\r\n        name=\"type\"\r\n        component=\"select\"\r\n        required\r\n        onChange={selectChange}\r\n      >\r\n        <option value=\"type\">Select type</option>\r\n        <option value=\"pizza\">Pizza</option>\r\n        <option value=\"soup\">Soup</option>\r\n        <option value=\"sandwich\">Sandwich</option>\r\n      </Field>\r\n      {typeDishes === \"pizza\" && (\r\n        <>\r\n          <label className={s.label} htmlFor=\"no_of_slices\">\r\n            Number of Slices\r\n          </label>\r\n          <Field\r\n            id=\"no_of_slices\"\r\n            className={s.field}\r\n            component=\"input\"\r\n            type=\"number\"\r\n            name=\"no_of_slices\"\r\n            required\r\n            min=\"1\"\r\n            max=\"10\"\r\n            step=\"1\"\r\n            placeholder=\"0-10\"\r\n            parse={(value) => +value}\r\n          />\r\n\r\n          <label className={s.label} htmlFor=\"diameter\">\r\n            Diameter\r\n          </label>\r\n          <Field\r\n            id=\"diameter\"\r\n            className={s.field}\r\n            name=\"diameter\"\r\n            component=\"input\"\r\n            type=\"number\"\r\n            pattern=\"\\d+(\\.\\d*)?\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.2\"\r\n            required\r\n            placeholder=\"0-100\"\r\n            parse={(value) => +value}\r\n          />\r\n        </>\r\n      )}\r\n      {typeDishes === \"soup\" && (\r\n        <>\r\n          <label className={s.label} htmlFor=\"spiciness_scale\">\r\n            Spiciness scale{\" \"}\r\n          </label>\r\n          <Field\r\n            id=\"spiciness_scale\"\r\n            className={s.field}\r\n            component=\"input\"\r\n            type=\"number\"\r\n            name=\"spiciness_scale\"\r\n            min=\"0\"\r\n            max=\"10\"\r\n            step=\"1\"\r\n            required\r\n            placeholder=\"0-10\"\r\n            parse={(value) => +value}\r\n          />\r\n        </>\r\n      )}\r\n      {typeDishes === \"sandwich\" && (\r\n        <>\r\n          <label className={s.label} htmlFor=\"slices_of_bread \">\r\n            Slices of bread{\" \"}\r\n          </label>\r\n          <Field\r\n            id=\"slices_of_bread\"\r\n            className={s.field}\r\n            component=\"input\"\r\n            type=\"number\"\r\n            name=\"slices_of_bread\"\r\n            required\r\n            min=\"0\"\r\n            max=\"20\"\r\n            step=\"1\"\r\n            placeholder=\"0-20\"\r\n            parse={(value) => +value}\r\n          />\r\n        </>\r\n      )}\r\n      <div className={s.button_container}>\r\n        <button\r\n          className={s.button}\r\n          type=\"submit\"\r\n          disabled={pristine || submitting}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          disabled={pristine || submitting}\r\n          onClick={reset}\r\n        >\r\n          Clear form\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nDishesForm = reduxForm({\r\n  form: \"dishes\",\r\n  destroyOnUnmount: false,\r\n})(DishesForm);\r\n\r\nexport default DishesForm;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const fetchDishes = createAsyncThunk(\"fetchDishes\", async (values) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"https://frosty-wood-6558.getsandbox.com:443/dishes\",\r\n      values,\r\n    );\r\n    return toast.success(`Your order ${data.type} is accepted, Bon appetit!`, {\r\n      position: \"top-right\",\r\n      autoClose: 4000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } catch (error) {\r\n    return toast.error(\"Please enter correct dish data\", {\r\n      position: \"top-right\",\r\n      autoClose: 4000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n});\r\n","import \"./App.css\";\nimport DishesForm from \"./Components/DishesForm\";\nimport { fetchDishes } from \"./Redux/operation\";\nimport { useDispatch } from \"react-redux\";\nimport s from \"./Components/Form.module.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const submit = (values) => {\n    dispatch(fetchDishes(values));\n  };\n  return (\n    <div className={s.container}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <DishesForm onSubmit={submit} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport logger from \"redux-logger\";\r\nexport const store = configureStore({\r\n  reducer: {\r\n    form: formReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3eL2-\",\"form\":\"Form_form__1c2VL\",\"form_title\":\"Form_form_title__7XR6c\",\"label\":\"Form_label__159Xz\",\"field\":\"Form_field__7o1Zd\",\"button_container\":\"Form_button_container__3yZsj\",\"button\":\"Form_button__22DxR\"};"],"sourceRoot":""}